#!/bin/bash

# before executing make sure you read README.md
# can something smarter be done here?
sethostname=$(cat /etc/rpi.json | jq -r .sethostname)
timezone=$(cat /etc/rpi.json | jq -r .timezone)
maindir=$(cat /etc/rpi.json | jq -r .maindir)
aws_region=$(cat /etc/rpi.json | jq -r .aws.region)
aws_r53zoneid=$(cat /etc/rpi.json | jq -r .aws.r53zoneid)
aws_r53subdomain=$(cat /etc/rpi.json | jq -r .aws.r53subdomain)
ssh_publickey=$(cat /etc/rpi.json | jq -r .ssh.publickey)
ssh_keyuser=$(cat /etc/rpi.json | jq -r .ssh.keyuser)

# do the lifting

if [ ! -z "$sethostname" ]; then
    hostname $sethostname
    # do more stuff here to ensure hostname is set properly
    #cat "$sethostname" > /etc/hostname
fi

if [ ! -z "$timezone" ]; then
    ln -sfv /usr/share/zoneinfo/$timezone /etc/localtime
fi

if [ -z "$maindir" ] && [ ! -d $maindir ]; then
    mkdir -v -p $maindir
    chmod -v 777 $maindir
fi

echo "Installing AWSCLI..."
pip2 install awscli --upgrade

echo "Installing AWSLOGS..."
pip2 install awslogs --upgrade
service awslogs restart
service awslogs status

if [ -z "$ssh_publickey" ] || [ -z "$ssh_keyuser" ]; then
    echo "[WARN] Conf. parameter 'ssh.publickey' pr 'ssh.keyuser' not set. Skipping SSH public key setting for for root"
else
    echo "Setting up /$ssh_keyuser/.ssh credentials"
    mkdir -p /$ssh_keyuser/.ssh
    echo $ssh_publickey > /$ssh_keyuser/.ssh/authorized_keys

    echo "Setting up SSHD configuration"
    sed -i "s/\#\?PermitRootLogin.*/PermitRootLogin without-password/g" /etc/ssh/sshd_config
    sed -i "s/\#Port 22/Port 22/ig" /etc/ssh/sshd_config
    service ssh restart
    service ssh status
fi

# install some scheduled jobs
if [ -z "$aws_r53zoneid" ] || [ -z "$aws_r53subdomain" ] || [ -z "$HOME" ] || [ -z "$PATH" ]; then
    echo "[WARN] Conf. parameters 'aws.r53zoneid' or 'aws.r53subdomain' or env. variables \$HOME or \$PATH are not set. Skipping crontab configuration!"
else
    crontab -r
    (
        echo "PATH=$PATH"; \
        echo "HOME=$HOME"; \
        echo "@daily /etc/scripts/sunset-sunrise-today &> /dev/null"; \
        echo "45 1 * * * shutdown -r"; \
        echo "@hourly /etc/scripts/get-ip $aws_r53zoneid $aws_r53subdomain &> /dev/null"; \
        echo "55 */1 * * * /etc/scripts/reload-aws-credentials &> /dev/null"; \
        echo "*/2 * * * * /etc/scripts/capture-image cam1 &> /dev/null"
    ) | crontab -
    crontab -l

    # run some scripts now
    /etc/scripts/reload-aws-credentials
    /etc/scripts/get-ip $aws_r53zoneid $aws_r53subdomain
    /etc/scripts/sunset-sunrise-today
fi

# reboot in one minute
shutdown -r +1