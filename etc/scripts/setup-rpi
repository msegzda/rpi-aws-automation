#!/bin/bash

# before executing make sure you read README.md
# can something smarter be done here?
CONFIG=$(cat /etc/rpi.json)
sethostname=$(jq -r .sethostname <<< $CONFIG)
timezone=$(jq -r .timezone <<< $CONFIG)
maindir=$(jq -r .maindir <<< $CONFIG)
aws_region=$(jq -r .aws.region <<< $CONFIG)
ssh_publickey=$(jq -r .ssh.publickey <<< $CONFIG)
ssh_keyuser=$(jq -r .ssh.keyuser <<< $CONFIG)
cam1_takefrequency=$(jq -r .cam1.takefrequency <<< $CONFIG)
sun_takefrequency=$(jq -r .sun.takefrequency <<< $CONFIG)
weather_takefrequency=$(jq -r .weather.takefrequency <<< $CONFIG)

# do the lifting

if [ ! -z "$timezone" ] && [ $(ls -alh /etc/localtime | grep $timezone | wc -l) -eq 0 ]; then
    ln -sfv /usr/share/zoneinfo/$timezone /etc/localtime
else
    echo "Timezone $timezone is set on system already"
    echo "Current datetime: $(date)"
fi

if [ -z "$maindir" ] && [ ! -d $maindir ]; then
    mkdir -v -p $maindir
    chmod -v 777 $maindir
fi

if [ ! -f "$maindir/awscli-n-logs-updated.tmp" ]; then
    echo "Installing AWSCLI..."
    pip2 install awscli --upgrade

    echo "Installing AWSLOGS..."
    pip2 install awslogs --upgrade
    service awslogs restart
    touch "$maindir/awscli-n-logs-updated.tmp"
else
    echo "AWSCLI and AWSLOGS recently updated:"
    echo "File $maindir/awscli-n-logs-updated.tmp exists"
fi

if [ -z "$ssh_publickey" ] || [ -z "$ssh_keyuser" ]; then
    echo "[WARN] Conf. parameter 'ssh.publickey' pr 'ssh.keyuser' not set. Skipping SSH public key setting for for root"
else
    echo "Setting up /$ssh_keyuser/.ssh credentials"
    mkdir -p /$ssh_keyuser/.ssh
    echo $ssh_publickey > /$ssh_keyuser/.ssh/authorized_keys

    echo "Setting up SSHD configuration"
    sed -i "s/\#\?PermitRootLogin.*/PermitRootLogin without-password/g" /etc/ssh/sshd_config
    sed -i "s/\#Port 22/Port 22/ig" /etc/ssh/sshd_config
    service ssh restart
fi

if [ ! -z "$sethostname" ] && [ "$HOSTNAME" != "$sethostname" ]; then
    echo "New hostname: $sethostname"
    hostname "$sethostname"
    echo "$sethostname" > /etc/hostname
    echo "127.0.1.1 $sethostname" >> /etc/hosts
    # reboot in 2 minutes
    shutdown -r +2
fi

# install some cron jobs
if [ -z "$HOME" ] || [ -z "$PATH" ]; then
    echo "[WARN] Env. variables \$HOME or \$PATH are not set. Skipping crontab configuration!"
else
    echo "Crontab file below:"
    crontab -r
    (
        echo "PATH=$PATH"; \
        echo "HOME=$HOME"; \
        echo "$sun_takefrequency /etc/scripts/sunset-sunrise-today &> /dev/null"; \
        echo "$weather_takefrequency /etc/scripts/weather-now &> /dev/null"; \
        echo "45 1 * * 0 shutdown -r"; \
        echo "@hourly /etc/scripts/get-ip &> /dev/null"; \
        echo "1 */1 * * * /etc/scripts/awscreds-n-leftovers &> /dev/null"; \
        echo "$cam1_takefrequency /etc/scripts/capture-image cam1 &> /dev/null"
    ) | crontab -
    crontab -l

    # run some scripts now
    /etc/scripts/awscreds-n-leftovers
    /etc/scripts/get-ip
    /etc/scripts/sunset-sunrise-today
fi