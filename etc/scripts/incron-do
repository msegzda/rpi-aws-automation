#!/bin/bash

loggertitle="$(basename ${0})[$$]"

if [ -z "$1" ] || [ -z "$2" ] || [ -z "$3" ]; then
    echo "Missing parameters."
    exit
fi

incronAction=$1
dirfrom=$2
file=$3
CAM=$(cut -d'_' -f 1 <<< "$file") # takes CAM1 from CAM1_01_20190314062013.jpg
CAM=${CAM,,} # lowercase: CAM1 -> cam1

if [[ ! $CAM =~ ^cam[0-9]$ ]] || [[ ! $(file -b "$dirfrom/$file") =~ JPEG ]]; then
    logger -t $loggertitle "[ERR] Invalid $dirfrom/$file file. Ignoring."
    exit 1
fi

CONFIG=$(cat /etc/rpi.json)
maindir=$(jq -r .maindir <<< $CONFIG)
DATEDIR=`date +%Y/%m/%d`
TMPLOCAL="$maindir/$CAM/$DATEDIR"
RETRYDATE=`date +%Y%m%d`

s3bucket="s3://"$(jq -r .aws.s3 <<< $CONFIG)"/$CAM"
s3public=$(jq -r .aws.s3pub <<< $CONFIG)"/$CAM"

FILENAME=`date +%Y%m%d%H%M%S`
wwwhtml="/var/www/html"
htmlcurrent="$wwwhtml/$CAM/current"
SUNFILE=$(cat $maindir/sunrise-sunset-today.json)
setoffset=$(jq -r .sun.setoffset <<< $CONFIG)
riseoffset=$(jq -r .sun.riseoffset <<< $CONFIG)
jq_temp=$(jq -r .weather.jq_temp <<< $CONFIG)
jq_wind=$(jq -r .weather.jq_wind <<< $CONFIG)

# in the night do not capture
# below compares numbers in HHmmss format
sunrse=`date +"%H%M%S" --date="$(jq -r .results.sunrise <<< $SUNFILE) $riseoffset"`
sunset=`date +"%H%M%S" --date="$(jq -r .results.sunset <<< $SUNFILE) $setoffset"`
NOW=$(date +"%H%M%S")

if [ $sunrse -ge $NOW ] || [ $sunset -le $NOW ]; then
    echo "Not doing anything in the night"
    exit 2
fi

if [ ! -d $TMPLOCAL ]; then
    mkdir -v -p $TMPLOCAL
    chmod -v 777 $TMPLOCAL
fi

if [ ! -d $htmlcurrent ]; then
    mkdir -v -p $htmlcurrent
    chmod -v 777 $htmlcurrent
fi

if [[ ! -f $htmlcurrent/index.html ]] || [[ $(cmp --silent $wwwhtml/index.template.html $htmlcurrent/index.html; echo $?) -ne 0 ]]; then
    cp -fv $wwwhtml/index.template.html $htmlcurrent/index.html | logger -t $loggertitle
fi

sleep 2s
cmdmv="mv -fv $dirfrom/$file /tmp/$CAM-$FILENAME-1.jpg"
eval $cmdmv 2>&1 | logger -t $loggertitle

# did file move? If no - retry!
if [ -f "$dirfrom/$file" ]; then
    logger -t $loggertitle "[WARN] Failed to move $dirfrom/$file file. Retry!"
    sleep 2s
    eval $cmdmv 2>&1 | logger -t $loggertitle
    sleep 1s
fi
# if still not moved
if [ -f "$dirfrom/$file" ]; then
    logger -t $loggertitle "[ERR] > $cmdmv"
    exit
fi

# now annotate with temperature
temp=$(jq -rc "$jq_temp" < $maindir/weather.json)
wind=$(jq -rc "$jq_wind" < $maindir/weather.json)
camname=$(jq -r .$CAM.name <<< $CONFIG)
annotateformat=$(jq -r .$CAM.annotateformat <<< $CONFIG)
annotateformat=$(printf "$annotateformat" "$temp" "$CAM")
annotatecmd=$(jq -r .$CAM.annotatecmd <<< $CONFIG)
annotatecmd=$(printf "$annotatecmd" "/tmp/$CAM-$FILENAME-1.jpg" "$annotateformat" "/tmp/$CAM-$FILENAME-2.jpg")
#TODO: TZ=Europe/Vilnius date --iso-8601=seconds
#2019-03-13T19:32:57+02:00 annotate with date in this format

logger -t $loggertitle "> $annotatecmd"
eval $annotatecmd 2>&1 | logger -t $loggertitle

if [ ${PIPESTATUS[0]} -eq 0 ]; then
    # place annotated image into correct place
    mv -fv /tmp/$CAM-$FILENAME-2.jpg $TMPLOCAL/$FILENAME.jpg | logger -t $loggertitle
else
    logger -t $loggertitle "[WARN] Annotation failed. IM convert exit code: ${PIPESTATUS[0]}"
fi
# remove residual tmp files
rm -fv /tmp/$CAM-$FILENAME-*.jpg | logger -t $loggertitle

# write into last captures table
sqlite3 everything.db "CREATE TABLE IF NOT EXISTS captures(ID INTEGER PRIMARY KEY AUTOINCREMENT, cam TEXT, src TEXT, INSERT_DATE DATETIME DEFAULT CURRENT_TIMESTAMP);"
sqlite3 everything.db "INSERT INTO captures (cam,src) VALUES ('$CAM','$s3public/$DATEDIR/$FILENAME.jpg');"

awscp="aws s3 cp $TMPLOCAL/$FILENAME.jpg $s3bucket/$DATEDIR/ --acl public-read"
eval $awscp 2>&1 | logger -t $loggertitle

if [ ${PIPESTATUS[0]} -ne 0 ]; then
    logger -t $loggertitle "[ERR] AWSCLI failed. Exit code: ${PIPESTATUS[0]}"
    echo "$awscp" >> $maindir/aws-s3-cp-$RETRYDATE.retry
    logger -t $loggertitle "[WARN] $maindir/aws-s3-cp-$RETRYDATE.retry file written"
fi

# write into manifest file
sqlite3 -csv -header everything.db "SELECT ID AS pid,src,'2560' as w,'1440' as h FROM captures ORDER BY ID DESC LIMIT 20;" > $htmlcurrent/gallery.csv